APP_PACKAGE  := $(shell ./gradlew -q print-package)
PWD          := $(shell pwd)
MAIN_DIR     := src/main/java/$(shell echo $(APP_PACKAGE) | sed 's/\./\//g')
TEST_DIR     := $(shell echo $(MAIN_DIR) | sed 's/main/test/')
GEN_DIR      := $(MAIN_DIR)/generated
ALL_PACKABLE := $(shell find src/main -type f)
BIN_DIR := .tools/bin
FGPUTIL_VER  = "4b5d82c"

EXAMPLE_DIR      := src/main/java/org/veupathdb/service/demo
EXAMPLE_TEST_DIR := src/test/java/org/veupathdb/service/demo

C_BLUE := "\\033[94m"
C_NONE := "\\033[0m"
C_CYAN := "\\033[36m"

.PHONY: default
default:
	@echo "Please choose one of:"
	@echo ""
	@echo "$(C_BLUE)  make compile$(C_NONE)"
	@echo "    Compiles the existing code in 'src/'.  Regenerates files if the"
	@echo "    api spec has changed."
	@echo ""
	@echo "$(C_BLUE)  make test$(C_NONE)"
	@echo "    Compiles the existing code in 'src/' and runs unit tests."
	@echo "    Regenerates files if the api spec has changed."
	@echo ""
	@echo "$(C_BLUE)  make jar$(C_NONE)"
	@echo "    Compiles a 'fat jar' from this project and it's dependencies."
	@echo ""
	@echo "$(C_BLUE)  make docker$(C_NONE)"
	@echo "    Builds a runnable docker image for this service"
	@echo ""
	@echo "$(C_BLUE)  make install-dev-env$(C_NONE)"
	@echo "    Ensures the current dev environment has the necessary "
	@echo "    installable tools to build this project."
	@echo ""
	@echo "$(C_BLUE)  make gen-jaxrs$(C_NONE)"
	@echo "    Ensures the current dev environment has the necessary "
	@echo "    installable tools to build this project."
	@echo ""
	@echo "$(C_BLUE)  make clean$(C_NONE)"
	@echo "    Remove files generated by other targets; put project back in its"
	@echo "    original state."
	@echo ""

.PHONY: compile
compile: install-dev-env gen-jaxrs gen-docs
	@./gradlew clean compileJava

.PHONY: test
test: install-dev-env gen-jaxrs gen-docs
	@./gradlew clean test

.PHONY: jar
jar: install-dev-env build/libs/service.jar

.PHONY: docker
docker:
	@./gradlew build-docker --stacktrace

.PHONY: cleanup-example
cleanup-example:
	@$(BIN_DIR)/demo-cleanup.sh $(MAIN_DIR)

.PHONY: install-dev-env
install-dev-env:
	@if [ ! -d .tools ]; then git clone https://github.com/VEuPathDB/lib-jaxrs-container-build-utils .tools; else cd .tools && git pull && cd ..; fi
	@$(BIN_DIR)/check-env.sh
	@$(BIN_DIR)/install-oracle.sh
	@./gradlew install-raml-4-jax-rs --stacktrace
	@$(BIN_DIR)/install-raml-merge.sh
	@$(BIN_DIR)/install-npm.sh

clean:
	@rm -rf .gradle .tools vendor build

fix-path:
	@$(BIN_DIR)/fix-path.sh $(EXAMPLE_DIR) $(MAIN_DIR)
	@$(BIN_DIR)/fix-path.sh $(EXAMPLE_TEST_DIR) $(TEST_DIR)

gen-jaxrs: api.raml merge-raml
	@./gradlew generate-jaxrs --stacktrace
	@$(BIN_DIR)/generate-jaxrs-streams.sh $(APP_PACKAGE)
	@grep -Rl javax src | xargs -I{} sed -i 's/javax/jakarta/g' {}

gen-docs: api.raml merge-raml
	@$(BIN_DIR)/generate-docs.sh

merge-raml:
	@$(BIN_DIR)/merge-raml schema > schema/library.raml

#
# File based targets
#

build/libs/service.jar: \
      gen-jaxrs \
      gen-docs \
      vendor/fgputil-accountdb-1.0.0.jar \
      vendor/fgputil-cache-1.0.0.jar \
      vendor/fgputil-cli-1.0.0.jar \
      vendor/fgputil-client-1.0.0.jar \
      vendor/fgputil-core-1.0.0.jar \
      vendor/fgputil-db-1.0.0.jar \
      vendor/fgputil-events-1.0.0.jar \
      vendor/fgputil-json-1.0.0.jar \
      vendor/fgputil-server-1.0.0.jar \
      vendor/fgputil-servlet-1.0.0.jar \
      vendor/fgputil-solr-1.0.0.jar \
      vendor/fgputil-test-1.0.0.jar \
      vendor/fgputil-web-1.0.0.jar \
      vendor/fgputil-xml-1.0.0.jar \
      build.gradle.kts
	@echo "$(C_BLUE)Building application jar$(C_NONE)"
	@./gradlew clean test jar

vendor/fgputil-accountdb-1.0.0.jar:
	@mkdir -p "vendor"
	@wget https://github.com/VEuPathDB/FgpUtil/releases/download/$(FGPUTIL_VER)/fgputil-accountdb-1.0.0.jar -O $@

vendor/fgputil-cache-1.0.0.jar:
	@mkdir -p "vendor"
	@wget https://github.com/VEuPathDB/FgpUtil/releases/download/$(FGPUTIL_VER)/fgputil-cache-1.0.0.jar -O $@

vendor/fgputil-cli-1.0.0.jar:
	@mkdir -p "vendor"
	@wget https://github.com/VEuPathDB/FgpUtil/releases/download/$(FGPUTIL_VER)/fgputil-cli-1.0.0.jar -O $@

vendor/fgputil-client-1.0.0.jar:
	@mkdir -p "vendor"
	@wget https://github.com/VEuPathDB/FgpUtil/releases/download/$(FGPUTIL_VER)/fgputil-client-1.0.0.jar -O $@

vendor/fgputil-core-1.0.0.jar:
	@mkdir -p "vendor"
	@wget https://github.com/VEuPathDB/FgpUtil/releases/download/$(FGPUTIL_VER)/fgputil-core-1.0.0.jar -O $@

vendor/fgputil-db-1.0.0.jar:
	@mkdir -p "vendor"
	@wget https://github.com/VEuPathDB/FgpUtil/releases/download/$(FGPUTIL_VER)/fgputil-db-1.0.0.jar -O $@

vendor/fgputil-events-1.0.0.jar:
	@mkdir -p "vendor"
	@wget https://github.com/VEuPathDB/FgpUtil/releases/download/$(FGPUTIL_VER)/fgputil-events-1.0.0.jar -O $@

vendor/fgputil-json-1.0.0.jar:
	@mkdir -p "vendor"
	@wget https://github.com/VEuPathDB/FgpUtil/releases/download/$(FGPUTIL_VER)/fgputil-json-1.0.0.jar -O $@

vendor/fgputil-server-1.0.0.jar:
	@mkdir -p "vendor"
	@wget https://github.com/VEuPathDB/FgpUtil/releases/download/$(FGPUTIL_VER)/fgputil-server-1.0.0.jar -O $@

vendor/fgputil-servlet-1.0.0.jar:
	@mkdir -p "vendor"
	@wget https://github.com/VEuPathDB/FgpUtil/releases/download/$(FGPUTIL_VER)/fgputil-servlet-1.0.0.jar -O $@

vendor/fgputil-solr-1.0.0.jar:
	@mkdir -p "vendor"
	@wget https://github.com/VEuPathDB/FgpUtil/releases/download/$(FGPUTIL_VER)/fgputil-solr-1.0.0.jar -O $@

vendor/fgputil-test-1.0.0.jar:
	@mkdir -p "vendor"
	@wget https://github.com/VEuPathDB/FgpUtil/releases/download/$(FGPUTIL_VER)/fgputil-test-1.0.0.jar -O $@

vendor/fgputil-web-1.0.0.jar:
	@mkdir -p "vendor"
	@wget https://github.com/VEuPathDB/FgpUtil/releases/download/$(FGPUTIL_VER)/fgputil-web-1.0.0.jar -O $@

vendor/fgputil-xml-1.0.0.jar:
	@mkdir -p "vendor"
	@wget https://github.com/VEuPathDB/FgpUtil/releases/download/$(FGPUTIL_VER)/fgputil-xml-1.0.0.jar -O $@
